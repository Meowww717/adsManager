plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

node {

	version = "0.11.10"
	npmVersion = "2.1.5"
	yarnVersion = "0.16.1"
	download = true

	workDir = file("${project.buildDir}/src/main/frontend/nodejs")
	npmWorkDir = file("${project.buildDir}/src/main/frontend/npm")
	yarnWorkDir = file("${project.buildDir}/src/main/frontend/yarn")
	nodeModulesDir = file("${project.projectDir}/src/main/frontend")
}

processResources{
	dependsOn "copyFrontendToBuild"
}

task copyFrontendToBuild(type: Copy) {
	from "$projectDir/src/main/frontend/build/"
	into "$buildDir/resources/main/static"
}

task npmBuild(type: NpmTask) {
	execOverrides {
//        it.ignoreExitValue = true
		it.workingDir = 'src/main/frontend'
	}
	args = ['run', 'build']
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}
